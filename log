2018-05-01T09:33:40.983Z debug [object Object] 
2018-05-01T09:34:27.576Z debug [object Object] 
2018-05-01T09:40:15.541Z debug Logger failed to parse JSON 
2018-05-01T09:40:15.541Z debug [object Object] 
2018-05-01T18:21:24.032Z debug Logger failed to parse JSON 
2018-05-01T18:21:24.036Z debug Db {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s: 
   { databaseName: 'discordBot',
     dbCache: {},
     children: [],
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter],
        emitOpen: false,
        connectTimeoutMS: 30000,
        socketTimeoutMS: 0 },
     options: 
      { read_preference_tags: null,
        readPreference: [Object],
        url: 'mongodb://localhost:27017/discordBot',
        promiseLibrary: [Function: Promise],
        native_parser: true },
     logger: Logger { className: 'Db' },
     bson: BSON {},
     authSource: undefined,
     readPreference: ReadPreference { _type: 'ReadPreference', mode: 'primary', tags: undefined },
     bufferMaxEntries: -1,
     parentDb: null,
     pkFactory: undefined,
     nativeParser: true,
     promiseLibrary: [Function: Promise],
     noListener: false,
     readConcern: undefined },
  serverConfig: [Getter],
  bufferMaxEntries: [Getter],
  databaseName: [Getter],
  options: [Getter],
  native_parser: [Getter],
  slaveOk: [Getter],
  writeConcern: [Getter] } 
2018-05-02T19:17:28.719Z debug Logger failed to parse JSON 
2018-05-02T19:17:28.722Z debug Db {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s: 
   { databaseName: 'discordBot',
     dbCache: {},
     children: [],
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter],
        emitOpen: false,
        connectTimeoutMS: 30000,
        socketTimeoutMS: 0 },
     options: 
      { read_preference_tags: null,
        readPreference: [Object],
        url: 'mongodb://localhost:27017/discordBot',
        promiseLibrary: [Function: Promise],
        native_parser: true },
     logger: Logger { className: 'Db' },
     bson: BSON {},
     authSource: undefined,
     readPreference: ReadPreference { _type: 'ReadPreference', mode: 'primary', tags: undefined },
     bufferMaxEntries: -1,
     parentDb: null,
     pkFactory: undefined,
     nativeParser: true,
     promiseLibrary: [Function: Promise],
     noListener: false,
     readConcern: undefined },
  serverConfig: [Getter],
  bufferMaxEntries: [Getter],
  databaseName: [Getter],
  options: [Getter],
  native_parser: [Getter],
  slaveOk: [Getter],
  writeConcern: [Getter] } 
2018-05-02T19:19:01.898Z debug Logger failed to parse JSON 
2018-05-02T19:19:01.900Z debug Db {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s: 
   { databaseName: 'discordBot',
     dbCache: {},
     children: [],
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter],
        emitOpen: false,
        connectTimeoutMS: 30000,
        socketTimeoutMS: 0 },
     options: 
      { read_preference_tags: null,
        readPreference: [Object],
        url: 'mongodb://localhost:27017/discordBot',
        promiseLibrary: [Function: Promise],
        native_parser: true },
     logger: Logger { className: 'Db' },
     bson: BSON {},
     authSource: undefined,
     readPreference: ReadPreference { _type: 'ReadPreference', mode: 'primary', tags: undefined },
     bufferMaxEntries: -1,
     parentDb: null,
     pkFactory: undefined,
     nativeParser: true,
     promiseLibrary: [Function: Promise],
     noListener: false,
     readConcern: undefined },
  serverConfig: [Getter],
  bufferMaxEntries: [Getter],
  databaseName: [Getter],
  options: [Getter],
  native_parser: [Getter],
  slaveOk: [Getter],
  writeConcern: [Getter] } 
2018-05-02T19:19:54.501Z debug Logger failed to parse JSON 
2018-05-02T19:19:54.505Z debug Db {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s: 
   { databaseName: 'discordBot',
     dbCache: {},
     children: [],
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter],
        emitOpen: false,
        connectTimeoutMS: 30000,
        socketTimeoutMS: 0 },
     options: 
      { read_preference_tags: null,
        readPreference: [Object],
        url: 'mongodb://localhost:27017/discordBot',
        promiseLibrary: [Function: Promise],
        native_parser: true },
     logger: Logger { className: 'Db' },
     bson: BSON {},
     authSource: undefined,
     readPreference: ReadPreference { _type: 'ReadPreference', mode: 'primary', tags: undefined },
     bufferMaxEntries: -1,
     parentDb: null,
     pkFactory: undefined,
     nativeParser: true,
     promiseLibrary: [Function: Promise],
     noListener: false,
     readConcern: undefined },
  serverConfig: [Getter],
  bufferMaxEntries: [Getter],
  databaseName: [Getter],
  options: [Getter],
  native_parser: [Getter],
  slaveOk: [Getter],
  writeConcern: [Getter] } 
2018-05-02T19:20:21.565Z debug Logger failed to parse JSON 
2018-05-02T19:20:21.567Z debug Db {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s: 
   { databaseName: 'discordBot',
     dbCache: {},
     children: [],
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter],
        emitOpen: false,
        connectTimeoutMS: 30000,
        socketTimeoutMS: 0 },
     options: 
      { read_preference_tags: null,
        readPreference: [Object],
        url: 'mongodb://localhost:27017/discordBot',
        promiseLibrary: [Function: Promise],
        native_parser: true },
     logger: Logger { className: 'Db' },
     bson: BSON {},
     authSource: undefined,
     readPreference: ReadPreference { _type: 'ReadPreference', mode: 'primary', tags: undefined },
     bufferMaxEntries: -1,
     parentDb: null,
     pkFactory: undefined,
     nativeParser: true,
     promiseLibrary: [Function: Promise],
     noListener: false,
     readConcern: undefined },
  serverConfig: [Getter],
  bufferMaxEntries: [Getter],
  databaseName: [Getter],
  options: [Getter],
  native_parser: [Getter],
  slaveOk: [Getter],
  writeConcern: [Getter] } 
2018-05-02T19:23:00.664Z debug Logger failed to parse JSON 
2018-05-02T19:23:00.667Z debug Db {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s: 
   { databaseName: 'discordBot',
     dbCache: {},
     children: [],
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter],
        emitOpen: false,
        connectTimeoutMS: 30000,
        socketTimeoutMS: 0 },
     options: 
      { read_preference_tags: null,
        readPreference: [Object],
        url: 'mongodb://localhost:27017/discordBot',
        promiseLibrary: [Function: Promise],
        native_parser: true },
     logger: Logger { className: 'Db' },
     bson: BSON {},
     authSource: undefined,
     readPreference: ReadPreference { _type: 'ReadPreference', mode: 'primary', tags: undefined },
     bufferMaxEntries: -1,
     parentDb: null,
     pkFactory: undefined,
     nativeParser: true,
     promiseLibrary: [Function: Promise],
     noListener: false,
     readConcern: undefined },
  serverConfig: [Getter],
  bufferMaxEntries: [Getter],
  databaseName: [Getter],
  options: [Getter],
  native_parser: [Getter],
  slaveOk: [Getter],
  writeConcern: [Getter] } 
2018-05-02T19:31:12.942Z debug Logger failed to parse JSON 
2018-05-02T19:31:12.945Z debug Db {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s: 
   { databaseName: 'discordBot',
     dbCache: {},
     children: [],
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter],
        emitOpen: false,
        connectTimeoutMS: 30000,
        socketTimeoutMS: 0 },
     options: 
      { read_preference_tags: null,
        readPreference: [Object],
        url: 'mongodb://localhost:27017/discordBot',
        promiseLibrary: [Function: Promise],
        native_parser: true },
     logger: Logger { className: 'Db' },
     bson: BSON {},
     authSource: undefined,
     readPreference: ReadPreference { _type: 'ReadPreference', mode: 'primary', tags: undefined },
     bufferMaxEntries: -1,
     parentDb: null,
     pkFactory: undefined,
     nativeParser: true,
     promiseLibrary: [Function: Promise],
     noListener: false,
     readConcern: undefined },
  serverConfig: [Getter],
  bufferMaxEntries: [Getter],
  databaseName: [Getter],
  options: [Getter],
  native_parser: [Getter],
  slaveOk: [Getter],
  writeConcern: [Getter] } 
2018-05-02T19:31:23.026Z debug User just came online 
2018-05-02T19:31:23.053Z debug guildMember: <@347687241772040192> 
2018-05-02T19:31:23.365Z info Invalid accountToken - removing Role: <@347687241772040192> 
2018-05-02T19:47:55.513Z debug Logger failed to parse JSON 
2018-05-02T19:47:55.517Z debug Db {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s: 
   { databaseName: 'discordBot',
     dbCache: {},
     children: [],
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter],
        emitOpen: false,
        connectTimeoutMS: 30000,
        socketTimeoutMS: 0 },
     options: 
      { read_preference_tags: null,
        readPreference: [Object],
        url: 'mongodb://localhost:27017/discordBot',
        promiseLibrary: [Function: Promise],
        native_parser: true },
     logger: Logger { className: 'Db' },
     bson: BSON {},
     authSource: undefined,
     readPreference: ReadPreference { _type: 'ReadPreference', mode: 'primary', tags: undefined },
     bufferMaxEntries: -1,
     parentDb: null,
     pkFactory: undefined,
     nativeParser: true,
     promiseLibrary: [Function: Promise],
     noListener: false,
     readConcern: undefined },
  serverConfig: [Getter],
  bufferMaxEntries: [Getter],
  databaseName: [Getter],
  options: [Getter],
  native_parser: [Getter],
  slaveOk: [Getter],
  writeConcern: [Getter] } 
2018-05-02T19:48:19.705Z debug Logger failed to parse JSON 
2018-05-02T19:48:19.708Z debug Db {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s: 
   { databaseName: 'discordBot',
     dbCache: {},
     children: [],
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter],
        emitOpen: false,
        connectTimeoutMS: 30000,
        socketTimeoutMS: 0 },
     options: 
      { read_preference_tags: null,
        readPreference: [Object],
        url: 'mongodb://localhost:27017/discordBot',
        promiseLibrary: [Function: Promise],
        native_parser: true },
     logger: Logger { className: 'Db' },
     bson: BSON {},
     authSource: undefined,
     readPreference: ReadPreference { _type: 'ReadPreference', mode: 'primary', tags: undefined },
     bufferMaxEntries: -1,
     parentDb: null,
     pkFactory: undefined,
     nativeParser: true,
     promiseLibrary: [Function: Promise],
     noListener: false,
     readConcern: undefined },
  serverConfig: [Getter],
  bufferMaxEntries: [Getter],
  databaseName: [Getter],
  options: [Getter],
  native_parser: [Getter],
  slaveOk: [Getter],
  writeConcern: [Getter] } 
2018-05-02T19:48:23.562Z debug User just came online 
2018-05-02T19:48:23.562Z debug GuildMember.user: <@347687241772040192> 
2018-05-02T19:48:23.562Z debug GuildMember: <@347687241772040192> 
2018-05-02T19:48:23.572Z debug Method call 'getClientByUid' error: null 
2018-05-02T19:48:23.572Z debug Method call 'getClientByUid' doc: [object Object] 
2018-05-02T19:48:23.572Z debug Recognizing already existing user: [object Object] 
2018-05-02T19:48:23.572Z debug User with invalid accountToken null 
2018-05-02T19:48:23.573Z debug guildMember: <@347687241772040192> 
2018-05-02T19:48:23.798Z info Invalid accountToken - removing Role: <@347687241772040192> 
2018-05-02T19:48:48.185Z debug Logger failed to parse JSON 
2018-05-02T19:48:48.188Z debug Db {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s: 
   { databaseName: 'discordBot',
     dbCache: {},
     children: [],
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter],
        emitOpen: false,
        connectTimeoutMS: 30000,
        socketTimeoutMS: 0 },
     options: 
      { read_preference_tags: null,
        readPreference: [Object],
        url: 'mongodb://localhost:27017/discordBot',
        promiseLibrary: [Function: Promise],
        native_parser: true },
     logger: Logger { className: 'Db' },
     bson: BSON {},
     authSource: undefined,
     readPreference: ReadPreference { _type: 'ReadPreference', mode: 'primary', tags: undefined },
     bufferMaxEntries: -1,
     parentDb: null,
     pkFactory: undefined,
     nativeParser: true,
     promiseLibrary: [Function: Promise],
     noListener: false,
     readConcern: undefined },
  serverConfig: [Getter],
  bufferMaxEntries: [Getter],
  databaseName: [Getter],
  options: [Getter],
  native_parser: [Getter],
  slaveOk: [Getter],
  writeConcern: [Getter] } 
2018-05-02T19:48:57.848Z debug User just came online 
2018-05-02T19:48:57.850Z debug GuildMember: <@347687241772040192> 
2018-05-02T19:48:57.851Z debug GuildMember.user: <@347687241772040192> 
2018-05-02T19:48:57.891Z debug Method call 'getClientByUid' error: null 
2018-05-02T19:48:57.891Z debug Method call 'getClientByUid' doc: [object Object] 
2018-05-02T19:48:57.891Z debug User with invalid accountToken null 
2018-05-02T19:48:57.891Z debug Recognizing already existing user: [object Object] 
2018-05-02T19:48:57.892Z debug guildMember: <@347687241772040192> 
2018-05-02T19:48:58.155Z info Invalid accountToken - removing Role: <@347687241772040192> 
2018-05-02T19:51:46.325Z debug Logger failed to parse JSON 
2018-05-02T19:51:46.328Z debug Db {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s: 
   { databaseName: 'discordBot',
     dbCache: {},
     children: [],
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter],
        emitOpen: false,
        connectTimeoutMS: 30000,
        socketTimeoutMS: 0 },
     options: 
      { read_preference_tags: null,
        readPreference: [Object],
        url: 'mongodb://localhost:27017/discordBot',
        promiseLibrary: [Function: Promise],
        native_parser: true },
     logger: Logger { className: 'Db' },
     bson: BSON {},
     authSource: undefined,
     readPreference: ReadPreference { _type: 'ReadPreference', mode: 'primary', tags: undefined },
     bufferMaxEntries: -1,
     parentDb: null,
     pkFactory: undefined,
     nativeParser: true,
     promiseLibrary: [Function: Promise],
     noListener: false,
     readConcern: undefined },
  serverConfig: [Getter],
  bufferMaxEntries: [Getter],
  databaseName: [Getter],
  options: [Getter],
  native_parser: [Getter],
  slaveOk: [Getter],
  writeConcern: [Getter] } 
2018-05-02T19:51:54.311Z debug User just changed presence state 
2018-05-02T19:51:54.312Z debug GuildMember: <@347687241772040192> 
2018-05-02T19:51:54.312Z debug GuildMember.user: <@347687241772040192> 
2018-05-02T19:51:54.325Z debug Method call 'getClientByUid' error: null 
2018-05-02T19:51:54.325Z debug Method call 'getClientByUid' doc: [object Object] 
2018-05-02T19:51:54.325Z debug Recognizing already existing user: [object Object] 
2018-05-02T19:51:54.325Z debug User with invalid accountToken null 
2018-05-02T19:51:54.326Z debug guildMember: <@347687241772040192> 
2018-05-02T19:51:54.611Z info Invalid accountToken - removing Role: <@347687241772040192> 
2018-05-02T19:53:18.990Z debug Logger failed to parse JSON 
2018-05-02T19:53:18.993Z debug Db {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s: 
   { databaseName: 'discordBot',
     dbCache: {},
     children: [],
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter],
        emitOpen: false,
        connectTimeoutMS: 30000,
        socketTimeoutMS: 0 },
     options: 
      { read_preference_tags: null,
        readPreference: [Object],
        url: 'mongodb://localhost:27017/discordBot',
        promiseLibrary: [Function: Promise],
        native_parser: true },
     logger: Logger { className: 'Db' },
     bson: BSON {},
     authSource: undefined,
     readPreference: ReadPreference { _type: 'ReadPreference', mode: 'primary', tags: undefined },
     bufferMaxEntries: -1,
     parentDb: null,
     pkFactory: undefined,
     nativeParser: true,
     promiseLibrary: [Function: Promise],
     noListener: false,
     readConcern: undefined },
  serverConfig: [Getter],
  bufferMaxEntries: [Getter],
  databaseName: [Getter],
  options: [Getter],
  native_parser: [Getter],
  slaveOk: [Getter],
  writeConcern: [Getter] } 
2018-05-02T19:53:25.266Z debug User just changed presence state 
2018-05-02T19:53:25.267Z debug GuildMember: <@347687241772040192> 
2018-05-02T19:53:25.267Z debug GuildMember.user: <@347687241772040192> 
2018-05-02T19:53:25.280Z debug Method call 'getClientByUid' error: null 
2018-05-02T19:53:25.281Z debug Method call 'getClientByUid' doc: { _id: 5ae5fd582c0671d540e70356,
  accountId: '7A2FB987-5E65-E111-809D-78E7D1936EF0',
  clientId: '347687241772040192',
  clientNickname: 'The Bastion',
  clientUpdatedAt: '2018-04-30T13:05:45.382Z',
  accountToken: null,
  accountWorld: '2204',
  accountName: 'Impulse.2750',
  accountGuilds: 
   [ 'ECBC561A-7FD9-E411-A278-AC162DC0070D',
     'FE8D9048-17D1-4A73-AE0A-D4D9D431E2C1',
     'EA63C348-6B0D-4428-B440-0E0528DB5516',
     '8C9144BA-3871-498D-8485-77A54AB21F5E',
     'C213A0A4-D626-483E-879C-DA3E11C24B4C' ],
  accountCreated: '2012-04-25T20:55:00Z',
  accountAccess: [ 'GuildWars2', 'HeartOfThorns', 'PathOfFire' ],
  accountCommander: true } 
2018-05-02T19:53:25.281Z debug Recognizing already existing user: [object Object] 
2018-05-02T19:53:25.281Z debug User with invalid accountToken null 
2018-05-02T19:53:25.281Z debug guildMember: <@347687241772040192> 
2018-05-02T19:53:25.527Z info Invalid accountToken - removing Role: <@347687241772040192> 
2018-05-02T19:54:20.873Z debug Logger failed to parse JSON 
2018-05-02T19:54:20.876Z debug Db {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s: 
   { databaseName: 'discordBot',
     dbCache: {},
     children: [],
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter],
        emitOpen: false,
        connectTimeoutMS: 30000,
        socketTimeoutMS: 0 },
     options: 
      { read_preference_tags: null,
        readPreference: [Object],
        url: 'mongodb://localhost:27017/discordBot',
        promiseLibrary: [Function: Promise],
        native_parser: true },
     logger: Logger { className: 'Db' },
     bson: BSON {},
     authSource: undefined,
     readPreference: ReadPreference { _type: 'ReadPreference', mode: 'primary', tags: undefined },
     bufferMaxEntries: -1,
     parentDb: null,
     pkFactory: undefined,
     nativeParser: true,
     promiseLibrary: [Function: Promise],
     noListener: false,
     readConcern: undefined },
  serverConfig: [Getter],
  bufferMaxEntries: [Getter],
  databaseName: [Getter],
  options: [Getter],
  native_parser: [Getter],
  slaveOk: [Getter],
  writeConcern: [Getter] } 
2018-05-02T20:00:49.141Z debug GuildMember: <@347687241772040192> 
2018-05-02T20:00:49.139Z debug User just changed presence state 
2018-05-02T20:00:49.141Z debug GuildMember.user: <@347687241772040192> 
2018-05-02T20:00:49.180Z debug Method call 'getClientByUid' error: null 
2018-05-02T20:00:49.180Z debug Method call 'getClientByUid' doc: { _id: 5ae5fd582c0671d540e70356,
  accountId: '7A2FB987-5E65-E111-809D-78E7D1936EF0',
  clientId: '347687241772040192',
  clientNickname: 'The Bastion',
  clientUpdatedAt: '2018-04-30T13:05:45.382Z',
  accountToken: null,
  accountWorld: '2204',
  accountName: 'Impulse.2750',
  accountGuilds: 
   [ 'ECBC561A-7FD9-E411-A278-AC162DC0070D',
     'FE8D9048-17D1-4A73-AE0A-D4D9D431E2C1',
     'EA63C348-6B0D-4428-B440-0E0528DB5516',
     '8C9144BA-3871-498D-8485-77A54AB21F5E',
     'C213A0A4-D626-483E-879C-DA3E11C24B4C' ],
  accountCreated: '2012-04-25T20:55:00Z',
  accountAccess: [ 'GuildWars2', 'HeartOfThorns', 'PathOfFire' ],
  accountCommander: true } 
2018-05-02T20:00:49.185Z debug Recognizing already existing user: { _id: 5ae5fd582c0671d540e70356,
  accountId: '7A2FB987-5E65-E111-809D-78E7D1936EF0',
  clientId: '347687241772040192',
  clientNickname: 'The Bastion',
  clientUpdatedAt: '2018-04-30T13:05:45.382Z',
  accountToken: null,
  accountWorld: '2204',
  accountName: 'Impulse.2750',
  accountGuilds: 
   [ 'ECBC561A-7FD9-E411-A278-AC162DC0070D',
     'FE8D9048-17D1-4A73-AE0A-D4D9D431E2C1',
     'EA63C348-6B0D-4428-B440-0E0528DB5516',
     '8C9144BA-3871-498D-8485-77A54AB21F5E',
     'C213A0A4-D626-483E-879C-DA3E11C24B4C' ],
  accountCreated: '2012-04-25T20:55:00Z',
  accountAccess: [ 'GuildWars2', 'HeartOfThorns', 'PathOfFire' ],
  accountCommander: true } 
2018-05-02T20:00:49.185Z debug User with invalid accountToken: null 
2018-05-02T20:00:49.185Z debug guildMember: <@347687241772040192> 
2018-05-02T20:00:49.186Z info Invalid accountToken - removing Role: <@347687241772040192> 
2018-05-02T20:01:31.105Z debug User just changed presence state 
2018-05-02T20:01:31.106Z debug GuildMember: <@347687241772040192> 
2018-05-02T20:01:31.106Z debug GuildMember.user: <@347687241772040192> 
2018-05-02T20:01:31.119Z debug Method call 'getClientByUid' error: null 
2018-05-02T20:01:31.120Z debug Method call 'getClientByUid' doc: { _id: 5ae5fd582c0671d540e70356,
  accountId: '7A2FB987-5E65-E111-809D-78E7D1936EF0',
  clientId: '347687241772040192',
  clientNickname: 'The Bastion',
  clientUpdatedAt: '2018-04-30T13:05:45.382Z',
  accountToken: null,
  accountWorld: '2204',
  accountName: 'Impulse.2750',
  accountGuilds: 
   [ 'ECBC561A-7FD9-E411-A278-AC162DC0070D',
     'FE8D9048-17D1-4A73-AE0A-D4D9D431E2C1',
     'EA63C348-6B0D-4428-B440-0E0528DB5516',
     '8C9144BA-3871-498D-8485-77A54AB21F5E',
     'C213A0A4-D626-483E-879C-DA3E11C24B4C' ],
  accountCreated: '2012-04-25T20:55:00Z',
  accountAccess: [ 'GuildWars2', 'HeartOfThorns', 'PathOfFire' ],
  accountCommander: true } 
2018-05-02T20:01:31.120Z debug Recognizing already existing user: { _id: 5ae5fd582c0671d540e70356,
  accountId: '7A2FB987-5E65-E111-809D-78E7D1936EF0',
  clientId: '347687241772040192',
  clientNickname: 'The Bastion',
  clientUpdatedAt: '2018-04-30T13:05:45.382Z',
  accountToken: null,
  accountWorld: '2204',
  accountName: 'Impulse.2750',
  accountGuilds: 
   [ 'ECBC561A-7FD9-E411-A278-AC162DC0070D',
     'FE8D9048-17D1-4A73-AE0A-D4D9D431E2C1',
     'EA63C348-6B0D-4428-B440-0E0528DB5516',
     '8C9144BA-3871-498D-8485-77A54AB21F5E',
     'C213A0A4-D626-483E-879C-DA3E11C24B4C' ],
  accountCreated: '2012-04-25T20:55:00Z',
  accountAccess: [ 'GuildWars2', 'HeartOfThorns', 'PathOfFire' ],
  accountCommander: true } 
2018-05-02T20:01:31.120Z debug User with invalid accountToken: null 
2018-05-02T20:01:31.120Z debug guildMember: <@347687241772040192> 
2018-05-02T20:01:31.120Z info Invalid accountToken - removing Role: <@347687241772040192> 
2018-05-02T20:06:29.972Z debug Logger failed to parse JSON 
2018-05-02T20:06:29.976Z debug Db {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s: 
   { databaseName: 'discordBot',
     dbCache: {},
     children: [],
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter],
        emitOpen: false,
        connectTimeoutMS: 30000,
        socketTimeoutMS: 0 },
     options: 
      { read_preference_tags: null,
        readPreference: [Object],
        url: 'mongodb://localhost:27017/discordBot',
        promiseLibrary: [Function: Promise],
        native_parser: true },
     logger: Logger { className: 'Db' },
     bson: BSON {},
     authSource: undefined,
     readPreference: ReadPreference { _type: 'ReadPreference', mode: 'primary', tags: undefined },
     bufferMaxEntries: -1,
     parentDb: null,
     pkFactory: undefined,
     nativeParser: true,
     promiseLibrary: [Function: Promise],
     noListener: false,
     readConcern: undefined },
  serverConfig: [Getter],
  bufferMaxEntries: [Getter],
  databaseName: [Getter],
  options: [Getter],
  native_parser: [Getter],
  slaveOk: [Getter],
  writeConcern: [Getter] } 
2018-05-02T20:07:46.988Z debug Logger failed to parse JSON 
2018-05-02T20:07:46.991Z debug Db {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s: 
   { databaseName: 'discordBot',
     dbCache: {},
     children: [],
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter],
        emitOpen: false,
        connectTimeoutMS: 30000,
        socketTimeoutMS: 0 },
     options: 
      { read_preference_tags: null,
        readPreference: [Object],
        url: 'mongodb://localhost:27017/discordBot',
        promiseLibrary: [Function: Promise],
        native_parser: true },
     logger: Logger { className: 'Db' },
     bson: BSON {},
     authSource: undefined,
     readPreference: ReadPreference { _type: 'ReadPreference', mode: 'primary', tags: undefined },
     bufferMaxEntries: -1,
     parentDb: null,
     pkFactory: undefined,
     nativeParser: true,
     promiseLibrary: [Function: Promise],
     noListener: false,
     readConcern: undefined },
  serverConfig: [Getter],
  bufferMaxEntries: [Getter],
  databaseName: [Getter],
  options: [Getter],
  native_parser: [Getter],
  slaveOk: [Getter],
  writeConcern: [Getter] } 
2018-05-02T20:12:57.474Z debug Logger failed to parse JSON 
2018-05-02T20:12:57.478Z debug Db {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s: 
   { databaseName: 'discordBot',
     dbCache: {},
     children: [],
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter],
        emitOpen: false,
        connectTimeoutMS: 30000,
        socketTimeoutMS: 0 },
     options: 
      { read_preference_tags: null,
        readPreference: [Object],
        url: 'mongodb://localhost:27017/discordBot',
        promiseLibrary: [Function: Promise],
        native_parser: true },
     logger: Logger { className: 'Db' },
     bson: BSON {},
     authSource: undefined,
     readPreference: ReadPreference { _type: 'ReadPreference', mode: 'primary', tags: undefined },
     bufferMaxEntries: -1,
     parentDb: null,
     pkFactory: undefined,
     nativeParser: true,
     promiseLibrary: [Function: Promise],
     noListener: false,
     readConcern: undefined },
  serverConfig: [Getter],
  bufferMaxEntries: [Getter],
  databaseName: [Getter],
  options: [Getter],
  native_parser: [Getter],
  slaveOk: [Getter],
  writeConcern: [Getter] } 
2018-05-02T20:17:38.509Z debug Logger failed to parse JSON 
2018-05-02T20:17:38.512Z debug Db {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s: 
   { databaseName: 'discordBot',
     dbCache: {},
     children: [],
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter],
        emitOpen: false,
        connectTimeoutMS: 30000,
        socketTimeoutMS: 0 },
     options: 
      { read_preference_tags: null,
        readPreference: [Object],
        url: 'mongodb://localhost:27017/discordBot',
        promiseLibrary: [Function: Promise],
        native_parser: true },
     logger: Logger { className: 'Db' },
     bson: BSON {},
     authSource: undefined,
     readPreference: ReadPreference { _type: 'ReadPreference', mode: 'primary', tags: undefined },
     bufferMaxEntries: -1,
     parentDb: null,
     pkFactory: undefined,
     nativeParser: true,
     promiseLibrary: [Function: Promise],
     noListener: false,
     readConcern: undefined },
  serverConfig: [Getter],
  bufferMaxEntries: [Getter],
  databaseName: [Getter],
  options: [Getter],
  native_parser: [Getter],
  slaveOk: [Getter],
  writeConcern: [Getter] } 
2018-05-02T20:17:57.146Z debug Verify message received.. 
2018-05-02T20:18:31.041Z debug Logger failed to parse JSON 
2018-05-02T20:18:31.044Z debug Db {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  s: 
   { databaseName: 'discordBot',
     dbCache: {},
     children: [],
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter],
        emitOpen: false,
        connectTimeoutMS: 30000,
        socketTimeoutMS: 0 },
     options: 
      { read_preference_tags: null,
        readPreference: [Object],
        url: 'mongodb://localhost:27017/discordBot',
        promiseLibrary: [Function: Promise],
        native_parser: true },
     logger: Logger { className: 'Db' },
     bson: BSON {},
     authSource: undefined,
     readPreference: ReadPreference { _type: 'ReadPreference', mode: 'primary', tags: undefined },
     bufferMaxEntries: -1,
     parentDb: null,
     pkFactory: undefined,
     nativeParser: true,
     promiseLibrary: [Function: Promise],
     noListener: false,
     readConcern: undefined },
  serverConfig: [Getter],
  bufferMaxEntries: [Getter],
  databaseName: [Getter],
  options: [Getter],
  native_parser: [Getter],
  slaveOk: [Getter],
  writeConcern: [Getter] } 
2018-05-02T20:18:37.596Z debug Verify message received.. 
2018-05-02T20:23:15.874Z debug Verify message received.. 
2018-05-02T20:23:15.874Z debug Key is 72 characters long.. 
2018-05-02T20:23:16.669Z debug Method call 'database.udateUser: <@347687241772040192> 
2018-05-02T20:23:16.669Z debug Method call 'database.udateUser: <@347687241772040192> 
2018-05-02T20:23:16.932Z debug Method call message.member.addRole - resolve: <@347687241772040192> 
2018-05-02T20:24:05.790Z debug User just changed presence state 
2018-05-02T20:24:05.792Z debug GuildMember: <@347687241772040192> 
2018-05-02T20:24:05.792Z debug GuildMember.user: <@347687241772040192> 
2018-05-02T20:24:05.806Z debug Method call 'getClientByUid' error: null 
2018-05-02T20:24:05.807Z debug Method call 'getClientByUid' doc: { _id: 5ae5fd582c0671d540e70356,
  accountId: '7A2FB987-5E65-E111-809D-78E7D1936EF0',
  clientId: '347687241772040192',
  clientNickname: 'The Bastion',
  clientUpdatedAt: '2018-05-02T20:23:16.664Z',
  accountToken: null,
  accountWorld: '2204',
  accountName: 'Impulse.2750',
  accountGuilds: 
   [ 'ECBC561A-7FD9-E411-A278-AC162DC0070D',
     'FE8D9048-17D1-4A73-AE0A-D4D9D431E2C1',
     'EA63C348-6B0D-4428-B440-0E0528DB5516',
     '8C9144BA-3871-498D-8485-77A54AB21F5E',
     'C213A0A4-D626-483E-879C-DA3E11C24B4C' ],
  accountCreated: '2012-04-25T20:55:00Z',
  accountAccess: [ 'GuildWars2', 'HeartOfThorns', 'PathOfFire' ],
  accountCommander: true } 
2018-05-02T20:24:05.807Z debug Recognizing already existing user: { _id: 5ae5fd582c0671d540e70356,
  accountId: '7A2FB987-5E65-E111-809D-78E7D1936EF0',
  clientId: '347687241772040192',
  clientNickname: 'The Bastion',
  clientUpdatedAt: '2018-05-02T20:23:16.664Z',
  accountToken: null,
  accountWorld: '2204',
  accountName: 'Impulse.2750',
  accountGuilds: 
   [ 'ECBC561A-7FD9-E411-A278-AC162DC0070D',
     'FE8D9048-17D1-4A73-AE0A-D4D9D431E2C1',
     'EA63C348-6B0D-4428-B440-0E0528DB5516',
     '8C9144BA-3871-498D-8485-77A54AB21F5E',
     'C213A0A4-D626-483E-879C-DA3E11C24B4C' ],
  accountCreated: '2012-04-25T20:55:00Z',
  accountAccess: [ 'GuildWars2', 'HeartOfThorns', 'PathOfFire' ],
  accountCommander: true } 
2018-05-02T20:24:05.807Z debug User with invalid accountToken: null 
2018-05-02T20:24:05.807Z debug guildMember: <@347687241772040192> 
2018-05-02T20:24:06.081Z info Invalid accountToken - removing Role: <@347687241772040192> 
